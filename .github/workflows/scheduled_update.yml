name: Scheduled HLS Playlist Update

on:
  schedule:
    # Runs every 30 minutes
    - cron: '*/30 * * * *' 
  workflow_dispatch: 

jobs:
  update_playlist:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        # We need to fetch the full history to enable pushing changes
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for Git to push back changes
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install dependencies (requests)
        run: pip install requests
        
      - name: Run Playlist Generation Script
        # Executes your Python file, creating/overwriting playlist.m3u8
        run: python generate_playlist.py
        
      - name: Configure Git and Commit/Push Changes
        # ðŸš¨ REPLACING THE FAILING ACTION WITH STANDARD GIT COMMANDS ðŸš¨
        run: |
          # 1. Check if the file has changed (optional, but clean)
          if git diff --exit-code playlist.m3u8 > /dev/null; then
            echo "No changes found in playlist.m3u8. Skipping commit."
          else
            echo "Changes detected. Committing and pushing."
            
            # 2. Configure Git user for the commit
            git config user.name "GitHub Actions Bot"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            
            # 3. Add and Commit the file
            git add playlist.m3u8
            git commit -m "ðŸ¤– Playlist update: new HLS links [skip ci]"
            
            # 4. Push the change using the built-in token
            # This requires 'fetch-depth: 0' above to work correctly
            git push
          fi
